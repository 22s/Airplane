From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Paul Sauve <paul@technove.co>
Date: Sat, 31 Oct 2020 19:27:52 -0500
Subject: [PATCH] DataBits slight optimization

This shows improvements in tests, but in the real world might not be
that useful. May be thrown away in the future.

Airplane Lite
Copyright (C) 2020 Technove LLC

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

diff --git a/src/main/java/net/minecraft/server/DataBits.java b/src/main/java/net/minecraft/server/DataBits.java
index 353b61aa57501fa76ce42dff5ba61bdb6a1e302e..a3cb30fec6823387635d95ef421a9fb39fd08320 100644
--- a/src/main/java/net/minecraft/server/DataBits.java
+++ b/src/main/java/net/minecraft/server/DataBits.java
@@ -15,6 +15,10 @@ public class DataBits {
     private final int g;
     private final int h;
     private final int i;
+    // AirplaneL start
+    private final long longG;
+    private final long longH;
+    // AirplaneL end
 
     public DataBits(int i, int j) {
         this(i, j, (long[]) null);
@@ -43,20 +47,28 @@ public class DataBits {
             this.b = new long[l];
         }
 
+        // AirplaneL start
+        this.longG = Integer.toUnsignedLong(this.g);
+        this.longH = Integer.toUnsignedLong(this.h);
+        // AirplaneL end
     }
 
     private int b(int i) {
+        // AirplaneL start
+        /*
         long j = Integer.toUnsignedLong(this.g);
         long k = Integer.toUnsignedLong(this.h);
+         */
 
-        return (int) ((long) i * j + k >> 32 >> this.i);
+        return (int) ((long) i * this.longG + this.longH >> 32 >> this.i);
+        // AirplaneL end
     }
 
     public final int getAndSet(final int index, final int value) { return this.a(index, value); } // Tuinity - OBFHELPER
     public int a(int i, int j) {
         //Validate.inclusiveBetween(0L, (long) (this.e - 1), (long) i); // Paper
         //Validate.inclusiveBetween(0L, this.d, (long) j); // Paper
-        int k = this.b(i);
+        int k = (int) ((long) i * this.longG + this.longH >> 32 >> this.i); // AirplaneL - force inline
         long l = this.b[k];
         int i1 = (i - k * this.f) * this.c;
         int j1 = (int) (l >> i1 & this.d);
@@ -69,7 +81,7 @@ public class DataBits {
     public void b(int i, int j) {
         //Validate.inclusiveBetween(0L, (long) (this.e - 1), (long) i); // Paper
         //Validate.inclusiveBetween(0L, this.d, (long) j); // Paper
-        int k = this.b(i);
+        int k = (int) ((long) i * this.longG + this.longH >> 32 >> this.i); // AirplaneL - force inline
         long l = this.b[k];
         int i1 = (i - k * this.f) * this.c;
 
@@ -79,7 +91,7 @@ public class DataBits {
     public final int get(final int index) { return this.a(index); } // Tuinity - OBFHELPER
     public int a(int i) {
         //Validate.inclusiveBetween(0L, (long) (this.e - 1), (long) i); // Paper
-        int j = this.b(i);
+        int j = (int) ((long) i * this.longG + this.longH >> 32 >> this.i); // AirplaneL - force inline
         long k = this.b[j];
         int l = (i - j * this.f) * this.c;
 
